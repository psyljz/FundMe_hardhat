{
  "address": "0xEcDfae2CeDF66F74412eA0B08ED4C1D09c93DD72",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "FundMe_NotOwner",
      "type": "error"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "MINMUM_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "fonder",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "founderList",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "priceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x0257ea66008919d8560e227d3fe3b03cfd517f726fd2372229b65e486b3fa7c1",
  "receipt": {
    "to": null,
    "from": "0xDD41e8C2474fe2978FAAea64C955681c94102c0f",
    "contractAddress": "0xEcDfae2CeDF66F74412eA0B08ED4C1D09c93DD72",
    "transactionIndex": 9,
    "gasUsed": "778206",
    "logsBloom": "0x
    "blockHash": "0x202f654724624ba94e193b0d6ca54724418947d4982a4546756649b941d1d5d3",
    "transactionHash": "0x0257ea66008919d8560e227d3fe3b03cfd517f726fd2372229b65e486b3fa7c1",
    "logs": [],
    "blockNumber": 7836563,
    "cumulativeGasUsed": "4660979",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xD4a33860578De61DBAbDc8BFdb98FD742fA7028e"
  ],
  "numDeployments": 3,
  "solcInputHash": "c19ae4be9b9f9ad77615f061e2e91783",
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"FundMe_NotOwner\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"MINMUM_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"fonder\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"founderList\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"author\":\"liujingze\",\"kind\":\"dev\",\"methods\":{},\"title\":\"A  contract for crowd funding\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"@dev this implements\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier:MIT\\npragma solidity ^0.8.7;\\nimport \\\"./PriceConverter.sol\\\";\\n\\nerror FundMe_NotOwner();\\n\\n/** @title A  contract for crowd funding\\n *  @author liujingze\\n *  @notice\\n *  @dev this implements\\n *\\n */\\ncontract FundMe {\\n    //Type\\n    using PriceConverter for uint256;\\n\\n    // Sate variables\\n    uint256 public constant MINMUM_USD = 10;\\n\\n    address immutable i_owner;\\n\\n    AggregatorV3Interface public priceFeed;\\n\\n    constructor(address priceFeedAddress) {\\n        i_owner = msg.sender;\\n        priceFeed = AggregatorV3Interface(priceFeedAddress);\\n    }\\n\\n    address[] public fonder;\\n    mapping(address => uint256) public founderList;\\n\\n    function fund() public payable {\\n        // set a minimm fund\\n        // number=5;\\n\\n        require(\\n            msg.value.getETHconversion(priceFeed) > MINMUM_USD,\\n            \\\"Didn't send enoug ETH\\\"\\n        );\\n        fonder.push(msg.sender);\\n\\n        founderList[msg.sender] += msg.value;\\n    }\\n\\n    receive() external payable {\\n        fund();\\n    }\\n\\n    fallback() external payable {\\n        fund();\\n    }\\n\\n    modifier onlyOwer() {\\n        // \\u8282\\u7ea6gas\\n        if (msg.sender != i_owner) {\\n            revert FundMe_NotOwner();\\n        }\\n        _;\\n    }\\n\\n    function withdraw() public onlyOwer {\\n        for (\\n            uint256 founderindex = 0;\\n            founderindex < fonder.length;\\n            founderindex++\\n        ) {\\n            address founderAddress = fonder[founderindex];\\n\\n            founderList[founderAddress] = 0;\\n        }\\n\\n        fonder = new address[](0);\\n\\n        //transfer\\n\\n        // payable(msg.sender).transfer(address(this).balance);\\n        // bool sendSucuss = payable(msg.sender).send(address(this).balance);\\n        // require(sendSucuss,\\\"send failed\\\");\\n        (bool callSucuss, ) = payable(msg.sender).call{\\n            value: address(this).balance\\n        }(\\\"\\\");\\n        require(callSucuss, \\\"call failed\\\");\\n    }\\n}\\n\",\"keccak256\":\"0x4740de65ccad45c411ea57fc7e1340b93f006bef52652a15300e02a1b279127f\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier:MIT\\n\\n// \\u58f0\\u660e\\u7f16\\u8bd1\\u5668\\u7248\\u672c\\n//  ^ \\n// \\n\\n// \\u4ecenpm\\u4e2d\\u5bfc\\u5165\\u5305\\n// @chainlink\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\npragma solidity ^0.8.7;\\n\\nlibrary PriceConverter{\\n\\n     function getLatestPrice(AggregatorV3Interface priceFeed) internal view returns (uint256) {\\n\\n     \\n            \\n        (\\n            /*uint80 roundID*/,\\n            int price,\\n            /*uint startedAt*/,\\n            /*uint timeStamp*/,\\n            /*uint80 answeredInRound*/\\n        ) = priceFeed.latestRoundData();\\n\\n        return uint256(price)*1E10;\\n    }\\n\\n    function getETHconversion(uint256 ETHamount ,AggregatorV3Interface priceFeed)internal view returns(uint256){\\n        \\n \\n        uint amount = ETHamount*getLatestPrice(priceFeed) /1E18;\\n\\n        return amount /1E18;\\n\\n\\n    }\\n\\n\\n}\",\"keccak256\":\"0x608d4cd007a0282eea11c2184a93e382b06d3b975c3ec98bd29e5119a8bd5403\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a060405234801561001057600080fd5b50604051610e05380380610e058339818101604052810190610032919061010f565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1681525050806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505061013c565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100dc826100b1565b9050919050565b6100ec816100d1565b81146100f757600080fd5b50565b600081519050610109816100e3565b92915050565b600060208284031215610125576101246100ac565b5b6000610133848285016100fa565b91505092915050565b608051610cae61015760003960006102950152610cae6000f3fe6080604052600436106100595760003560e01c80633ccfd60b14610072578063741bef1a14610089578063747b497d146100b45780638a309d6e146100df578063af783b811461011c578063b60d42881461015957610068565b3661006857610066610163565b005b610070610163565b005b34801561007e57600080fd5b50610087610293565b005b34801561009557600080fd5b5061009e6104d4565b6040516100ab9190610754565b60405180910390f35b3480156100c057600080fd5b506100c96104f8565b6040516100d69190610788565b60405180910390f35b3480156100eb57600080fd5b50610106600480360381019061010191906107d4565b6104fd565b6040516101139190610822565b60405180910390f35b34801561012857600080fd5b50610143600480360381019061013e9190610869565b61053c565b6040516101509190610788565b60405180910390f35b610161610163565b005b600a61019860008054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461055490919063ffffffff16565b116101d8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101cf906108f3565b60405180910390fd5b6001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461028a9190610942565b92505081905550565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610318576040517f10e0797900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6001805490508110156103c45760006001828154811061033e5761033d610976565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806103bc906109a5565b91505061031b565b50600067ffffffffffffffff8111156103e0576103df6109ed565b5b60405190808252806020026020018201604052801561040e5781602001602082028036833780820191505090505b506001908051906020019061042492919061062e565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161044b90610a4d565b60006040518083038185875af1925050503d8060008114610488576040519150601f19603f3d011682016040523d82523d6000602084013e61048d565b606091505b50509050806104d1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104c890610aae565b60405180910390fd5b50565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600a81565b6001818154811061050d57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60026020528060005260406000206000915090505481565b600080670de0b6b3a76400006105698461059d565b856105749190610ace565b61057e9190610b3f565b9050670de0b6b3a7640000816105949190610b3f565b91505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa1580156105eb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061060f9190610bfd565b5050509150506402540be400816106269190610ace565b915050919050565b8280548282559060005260206000209081019282156106a7579160200282015b828111156106a65782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509160200191906001019061064e565b5b5090506106b491906106b8565b5090565b5b808211156106d15760008160009055506001016106b9565b5090565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061071a610715610710846106d5565b6106f5565b6106d5565b9050919050565b600061072c826106ff565b9050919050565b600061073e82610721565b9050919050565b61074e81610733565b82525050565b60006020820190506107696000830184610745565b92915050565b6000819050919050565b6107828161076f565b82525050565b600060208201905061079d6000830184610779565b92915050565b600080fd5b6107b18161076f565b81146107bc57600080fd5b50565b6000813590506107ce816107a8565b92915050565b6000602082840312156107ea576107e96107a3565b5b60006107f8848285016107bf565b91505092915050565b600061080c826106d5565b9050919050565b61081c81610801565b82525050565b60006020820190506108376000830184610813565b92915050565b61084681610801565b811461085157600080fd5b50565b6000813590506108638161083d565b92915050565b60006020828403121561087f5761087e6107a3565b5b600061088d84828501610854565b91505092915050565b600082825260208201905092915050565b7f4469646e27742073656e6420656e6f7567204554480000000000000000000000600082015250565b60006108dd601583610896565b91506108e8826108a7565b602082019050919050565b6000602082019050818103600083015261090c816108d0565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061094d8261076f565b91506109588361076f565b92508282019050808211156109705761096f610913565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60006109b08261076f565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036109e2576109e1610913565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610a37600083610a1c565b9150610a4282610a27565b600082019050919050565b6000610a5882610a2a565b9150819050919050565b7f63616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610a98600b83610896565b9150610aa382610a62565b602082019050919050565b60006020820190508181036000830152610ac781610a8b565b9050919050565b6000610ad98261076f565b9150610ae48361076f565b9250828202610af28161076f565b91508282048414831517610b0957610b08610913565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610b4a8261076f565b9150610b558361076f565b925082610b6557610b64610b10565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610b8f81610b70565b8114610b9a57600080fd5b50565b600081519050610bac81610b86565b92915050565b6000819050919050565b610bc581610bb2565b8114610bd057600080fd5b50565b600081519050610be281610bbc565b92915050565b600081519050610bf7816107a8565b92915050565b600080600080600060a08688031215610c1957610c186107a3565b5b6000610c2788828901610b9d565b9550506020610c3888828901610bd3565b9450506040610c4988828901610be8565b9350506060610c5a88828901610be8565b9250506080610c6b88828901610b9d565b915050929550929590935056fea26469706673582212203a58080c774a50589e6f20c2a863ee37288f04c23f44c3f568467030e973a86c64736f6c63430008110033",
  "deployedBytecode": "0x6080604052600436106100595760003560e01c80633ccfd60b14610072578063741bef1a14610089578063747b497d146100b45780638a309d6e146100df578063af783b811461011c578063b60d42881461015957610068565b3661006857610066610163565b005b610070610163565b005b34801561007e57600080fd5b50610087610293565b005b34801561009557600080fd5b5061009e6104d4565b6040516100ab9190610754565b60405180910390f35b3480156100c057600080fd5b506100c96104f8565b6040516100d69190610788565b60405180910390f35b3480156100eb57600080fd5b50610106600480360381019061010191906107d4565b6104fd565b6040516101139190610822565b60405180910390f35b34801561012857600080fd5b50610143600480360381019061013e9190610869565b61053c565b6040516101509190610788565b60405180910390f35b610161610163565b005b600a61019860008054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461055490919063ffffffff16565b116101d8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101cf906108f3565b60405180910390fd5b6001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461028a9190610942565b92505081905550565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610318576040517f10e0797900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6001805490508110156103c45760006001828154811061033e5761033d610976565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806103bc906109a5565b91505061031b565b50600067ffffffffffffffff8111156103e0576103df6109ed565b5b60405190808252806020026020018201604052801561040e5781602001602082028036833780820191505090505b506001908051906020019061042492919061062e565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161044b90610a4d565b60006040518083038185875af1925050503d8060008114610488576040519150601f19603f3d011682016040523d82523d6000602084013e61048d565b606091505b50509050806104d1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104c890610aae565b60405180910390fd5b50565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600a81565b6001818154811061050d57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60026020528060005260406000206000915090505481565b600080670de0b6b3a76400006105698461059d565b856105749190610ace565b61057e9190610b3f565b9050670de0b6b3a7640000816105949190610b3f565b91505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa1580156105eb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061060f9190610bfd565b5050509150506402540be400816106269190610ace565b915050919050565b8280548282559060005260206000209081019282156106a7579160200282015b828111156106a65782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509160200191906001019061064e565b5b5090506106b491906106b8565b5090565b5b808211156106d15760008160009055506001016106b9565b5090565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061071a610715610710846106d5565b6106f5565b6106d5565b9050919050565b600061072c826106ff565b9050919050565b600061073e82610721565b9050919050565b61074e81610733565b82525050565b60006020820190506107696000830184610745565b92915050565b6000819050919050565b6107828161076f565b82525050565b600060208201905061079d6000830184610779565b92915050565b600080fd5b6107b18161076f565b81146107bc57600080fd5b50565b6000813590506107ce816107a8565b92915050565b6000602082840312156107ea576107e96107a3565b5b60006107f8848285016107bf565b91505092915050565b600061080c826106d5565b9050919050565b61081c81610801565b82525050565b60006020820190506108376000830184610813565b92915050565b61084681610801565b811461085157600080fd5b50565b6000813590506108638161083d565b92915050565b60006020828403121561087f5761087e6107a3565b5b600061088d84828501610854565b91505092915050565b600082825260208201905092915050565b7f4469646e27742073656e6420656e6f7567204554480000000000000000000000600082015250565b60006108dd601583610896565b91506108e8826108a7565b602082019050919050565b6000602082019050818103600083015261090c816108d0565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061094d8261076f565b91506109588361076f565b92508282019050808211156109705761096f610913565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60006109b08261076f565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036109e2576109e1610913565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610a37600083610a1c565b9150610a4282610a27565b600082019050919050565b6000610a5882610a2a565b9150819050919050565b7f63616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610a98600b83610896565b9150610aa382610a62565b602082019050919050565b60006020820190508181036000830152610ac781610a8b565b9050919050565b6000610ad98261076f565b9150610ae48361076f565b9250828202610af28161076f565b91508282048414831517610b0957610b08610913565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610b4a8261076f565b9150610b558361076f565b925082610b6557610b64610b10565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610b8f81610b70565b8114610b9a57600080fd5b50565b600081519050610bac81610b86565b92915050565b6000819050919050565b610bc581610bb2565b8114610bd057600080fd5b50565b600081519050610be281610bbc565b92915050565b600081519050610bf7816107a8565b92915050565b600080600080600060a08688031215610c1957610c186107a3565b5b6000610c2788828901610b9d565b9550506020610c3888828901610bd3565b9450506040610c4988828901610be8565b9350506060610c5a88828901610be8565b9250506080610c6b88828901610b9d565b915050929550929590935056fea26469706673582212203a58080c774a50589e6f20c2a863ee37288f04c23f44c3f568467030e973a86c64736f6c63430008110033",
  "devdoc": {
    "author": "liujingze",
    "kind": "dev",
    "methods": {},
    "title": "A  contract for crowd funding",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "notice": "@dev this implements",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 62,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "priceFeed",
        "offset": 0,
        "slot": "0",
        "type": "t_contract(AggregatorV3Interface)45"
      },
      {
        "astId": 82,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "fonder",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 86,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "founderList",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_uint256)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}